{/* Copyright (c) 2021 AWE ***************************************************
'*  Name:        cnm.js
'*  Description: Global javascipt snippets.
'*  Email:       wilson.wampers@gmail.com
'*****************************************************************************
'*  Modification History:
'*  -When           -Who            -Bug#           -What
'*  --------------------------------------------------------------------------
'*  -09-Jun-2021    -Wilson Wampers -               -Initial Version
'*****************************************************************************
'* LM: ww230626.0915_P16 */}
console.log('cnm.js -> loaded.');
var cnm = cnm || {};

cnm.isDirty = false;
cnm.processed = false;
cnm.isShowing = false;
cnm.narrowSet = false;
cnm.cookieExpires = 'Wed, 30 Jun 2023 12:00:00 UTC';
cnm.showCNM = 0;
cnm.revision = '1.0';
cnm.msgs = new Array();
cnm.msgHtml = '';
cnm.msgIDs = [];
cnm.msgID = 0;
cnm.bSpleepActive = false;
cnm.sleepInterval = null;
cnm.single = false;
cnm.sleepIntervalLength = 60000;
// Load the style sheet
cnm.styleSheetUrl = global.micor2020Path + ((global.IEVersion == -1)?'/css/cnm.css':'/css/cnmIE.css');
global.loadCss(cnm.styleSheetUrl);
// Constructor
cnm._V = function(psMsg, pnIndx, pbShow, pbAck)
{
    this.MSG = psMsg;
    this.IDX = pnIndx;
    this.SHW = pbShow;
}

//****************************************************************************
// Desc: 
//****************************************************************************
cnm.positionTicker = function()
{
    try 
    {
        var nLeft = $('div.site-logo').offset().left + 6;
        $('div.cnmContainer').css({left: + nLeft + 'px'});
    }
    catch(e) {;}
}

//****************************************************************************
// Desc: 
//****************************************************************************
if(global.IEVersion == -1 )
{
    cnm.ro = new ResizeObserver(function(entries) 
    {
        for(var entry in entries) 
        {
            var cr = entry.contentRect;

            cnm.positionTicker();
        }
    });
}

//***************************************************************************
// Desc: The script starts running here
//***************************************************************************
$(document).ready(function()
{
    SP.SOD.executeFunc('sp.js', 'SP.ClientContext', cnm.init);
    $(document).on('mousemove', function(e)
    {
        if(cnm.bSpleepActive)
        {
            cnm.wakeUp();
        }
    });
});

//****************************************************************************
// Desc: 
//****************************************************************************
cnm.wakeUp = function()
{
    clearInterval(cnm.sleepInterval);
    cnm.sleepInterval = null;
    cnm.bSpleepActive = false;
    clearInterval(news.interval);
    news.interval = null;
    if(global.verbose) console.log('==> waking up cnm comms panel!');
    $('div.ui-newsticker').newsticker();
    cnm.positionTicker();
    cnm.setSleepInterval();
}

//****************************************************************************
// Desc: 
//****************************************************************************
cnm.init = function()
{// Don't run in Authoring
    if(document.getElementById('MSOLayout_InDesignMode').value != '1')
    {
        if(window.location.href.toLowerCase().indexOf('feedback') == -1)
        {// Only create if cnm doesn't yet exist
            if($('div#cnm').length == 0)
            {
                var sHtml = '';
                var svg_d = 'M18.5418 2.27956L16.7206 0.458313L9.50016 7.67873L2.27975 0.458313L0.458496 2.27956L7.67891 9.49998L0.458496 16.7204L2.27975 18.5416L9.50016 11.3212L16.7206 18.5416L18.5418 16.7204L11.3214 9.49998L18.5418 2.27956Z';

                sHtml += '\n<div id="cnm" style="display: none;">';
                sHtml += '\n  <div class="cnmClose" title="Click to acknowledge and close.">';
                sHtml += '\n    <div><svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">'
                                +'<path d="'+ svg_d +'" fill="black"/></svg></div>';
                sHtml += '\n  </div>';
                sHtml += '\n  <div class="cnmContainer"></div>';
                sHtml += '\n</div>';
               
                $('div#s4-workspace').find('header').append(sHtml);
                cnm.isShowing = false;

                // Reader has seen the msg and closes it.
                $('div.cnmClose').on('click', function(e)
                {
                    e.preventDefault();
                    cnm.isDirty = true;
                    var ackId = $('li.ui-newsticker-item.current').prop('id');
                    cnm.setMessageAsSeen(ackId);
                    console.log('user acknowledged: ' + ackId);
                    cnm.pushCookie();
                    cnm._close();
                });
                $(window).on('unload', function()
                {
                    if(!cnm.isDirty) cnm.pushCookie();
                });

                cnm.loadMessages();
            }
            else
            {
                cnm.showMessage();
            }
        }
    }
}

//****************************************************************************
// Desc: Async call collecting messages; continues to cnm.showMessage 
//       if any and the cookie allows it. -> changed to HTML call (08/09)
//****************************************************************************
cnm.loadMessages = function()
{
    var sMessage = '', sUrl, sArtLink, sId, ni=0, altMsg, itemCount=0;

    setTimeout(function()
    {
        if(window.location.href.toLowerCase().indexOf('.au/pages/default.aspx') != -1)
        {
            console.log('ðŸ’ŽMicor home page message');
            if($('div#cnm').length > 0)
            {
                $('div#cnm').css({'top':'5px'});
            }
        }
    }, 250);

    if(global.verbose) console.log('--> xXx Loading messages xXx <--');
    $('footer').prepend('<div id="cnmContent" class="cnmHidden"></div>');
    $('#cnmContent').load( '/news/Pages/isactive.aspx #script > table > tbody',
    function()
    {
        itemCount = $('#cnmContent').find('tr').length;
        
        if(global.verbose) console.log('Current public viewable entries counted: ' + itemCount);
        $('#cnmContent tr').each(
        function()
        {     
            ni++;
            altMsg   = 'Click to follow this link'
            sMessage = $(this).find('td').eq(2).html();
            sUrl     = $(this).find('td').eq(3).find('a').attr('href');
            sArtLink = (sUrl != '')? sUrl: null;
            // Clear out &ZeroWidthSpace;, <p> .. </p> tags, etc ...
            sMessage = sMessage.replace(/[\u200B-\u200D\uFEFF]/g, '');
            sMessage = sMessage.replace(/&ZeroWidthSpace;/g, '');
            sMessage = sMessage.replace(/<[^>]+>/g, '');
            if(sArtLink != null)
            {
                if(global.IEVersion == -1)
                {
                    sMessage = '<a title="'+ altMsg +'" href="'+ sArtLink +'">'+ sMessage +'</a>';
                    sMessage = '<span class="cnmSpacer">'+ sMessage +'</span>';
                }
                else /* IE 10/11 */
                {
                    altMsg  += '\n' + sMessage
                    sMessage = '<a title="'+ altMsg +'" href="'+ sArtLink +'">'+ sMessage +'</a>';
                    sMessage = '<span class="cnmSpacer">'+ sMessage +'</span>';
                }
            }
            else
            {
                if(global.IEVersion == -1)
                {
                    sMessage = '<span class="cnmSpacer">'+ sMessage +'</span>';
                }
                else /* IE 10/11 */
                {
                    altMsg   = sMessage;
                    sMessage = '<span class="cnmSpacer" title="'+ altMsg +'>'+ sMessage +'</span>';
                }
            }

            sId = $(this).attr('iid').split(',')[1];
            cnm.msgs[cnm.msgs.length] = new cnm._V(
                sMessage,
                parseInt(sId,10), 
                true
            );
            if(global.verbose) console.log(ni + ': \n' + sMessage);
        });
        
        $('#cnmContent').remove();
        if(itemCount > 0) 
        {
            cnm.showMessage();
        }
        else if(global.verbose) console.log('There are no public viewable CNM messages to show today.');
    });
}

//****************************************************************************
// Desc: 
//****************************************************************************  
cnm._close = function(pbSleep)
{
    $('div#cnm').animate(
        {
            height: 0
        }, 250, 'linear', 
        function()
        {
            $('div.cnmClose').hide();
            $('div#cnm').css({'display': 'none'});
            clearInterval(news.interval);
            news.interval = null;
            if(news.currentId != -1)
                $('li.ui-newsticker-item#' + news.currentId).remove();
            if($('li.ui-newsticker-item').length == 1)
            {
//:::TODO add swap to 1 message only mode instead of reloading
                window.location = window.location;
            }
        }
    );
    cnm.isShowing = false;
    if(!pbSleep) setTimeout(function()
    {
        if(global.verbose) console.log('Calling Open after close');
        if($('li.ui-newsticker-item').length > 0) cnm._open();
    }, 750);
}

//****************************************************************************
// Desc: 
//****************************************************************************
cnm._open = function()
{
    $('div#cnm').css({"display": 'block',"z-index":"99"});
    $('div#cnm').animate(
        {
            height: 50
        }, 250, 'swing', 
        function()
        {
            $('div.ui-newsticker').fadeIn(250, 
                function()
                {
                    $('div.cnmClose').show();
                }
            );          
        }
    );
    cnm.isShowing = true;
    $('div.ui-newsticker ul.ui-newsticker-list li.ui-newsticker-item').fadeIn(500);
}

//****************************************************************************
// Desc: 
//****************************************************************************
cnm.showMessage = function()
{   
    cnm.processCookieResult();                                                                  
    var sHtml = '';

    if(cnm.showCNM > 0)
    {
        $('div.cnmContainer').html('');
        sHtml += '<div class="cnmMsgBox" selectable="false" contenteditable="false">';
        sHtml += ' <div class="ui-newsticker">';
        sHtml += '  <ul class="ui-newsticker-list">';
        if(global.verbose) console.log('CNM messages html: \n' + cnm.msgHtml);
        sHtml += cnm.msgHtml;
        sHtml += '  </ul>';
        sHtml += ' </div>';
        sHtml += '</div>';
        cnm.positionTicker();
        $('div.cnmContainer').prepend(sHtml);
        if($('li.ui-newsticker-item').length > 1)
        {
            setTimeout(function()
            {
                if(global.verbose) console.log('==> Starting the newsticker!')
                $('div.ui-newsticker').newsticker();
                cnm._open();
            },100);
        }
        else if($('li.ui-newsticker-item').length == 1)
        {
            cnm.single = true;
            if(news.interval) clearInterval(news.interval);
            $('li.ui-newsticker-item').addClass('current');
            cnm._open();
        }
        cnm.bSpleepActive = false;
        cnm.setSleepInterval();
        if(global.IEVersion == -1)
            cnm.ro.observe($('div#s4-bodyContainer')[0]);
    }
    else
    {
        if(global.verbose) console.log('There are no CNM messages to show today for user: ' + cnm.sUserName);
    }
    
    return false;
}

//****************************************************************************
// Desc: 
//****************************************************************************
cnm.setSleepInterval = function()
{
    clearInterval(cnm.sleepInterval);
    cnm.sleepInterval = null;
    cnm.sleepInterval = setInterval( function()
    {
        clearInterval(news.interval);
        news.interval = null;
        cnm.bSpleepActive = true;
        if(global.verbose) console.warn(' x=> cnm.newsticker stopped by expiring interval');
    }, cnm.sleepIntervalLength);
}

//****************************************************************************
//Desc: Read cookie content if there
//Xmpl: systemUserKey:"i:0#.f|sharepointmembershipprovider|wilson.wampers"
//****************************************************************************
cnm.processCookieResult = function()
{
    if(!cnm.processed)
    {
        cnm.processed = true;
        cnm.nVisits   = 0;
        cnm.sUserName = 'anonymous';
        if(_spPageContextInfo.systemUserKey) 
        {
            var userName = _spPageContextInfo.systemUserKey.split('|')[2];
            if( typeof userName !== 'undefined')
            cnm.sUserName = userName; 
        }
        
        if(global.verbose) console.log('CNM< Hello ' + cnm.sUserName);
        cnm.sCookieContent = ut.getCookie('micor-cnm');
        if(typeof cnm.sCookieContent != 'undefined')
        {
            cnm.oData = JSON.parse(cnm.sCookieContent);
            if(cnm.oData.username == cnm.sUserName)
            {
                cnm.nVisits = cnm.oData.visits;
                cnm.msgIDs  = (cnm.oData.msgids)?cnm.oData.msgids:[];
            }
            var dLastVisit = cnm.oData.visitdate;
            var dToday = new Date().toDateString();
            if(typeof cnm.oData.revision === 'undefined' 
            || cnm.oData.revision != cnm.revision)
            {
                cnm.nVisits = 0;
                cnm.msgIDs = [];
            }
        }
        else
        {
            cnm.nVisits = 0;
            cnm.msgIDs = [];
        }
        cnm.hideActiveMsgAlreadySeen();
    }
    else
    {
        if(global.verbose) console.warn('This page has already processed the cookie!');
    }

    cnm.showCNM = cnm.getMessagesToShow();
}

//****************************************************************************
// Desc: Updates the cnm.msgs array .SHW property
//****************************************************************************
cnm.hideActiveMsgAlreadySeen = function()
{
    if(cnm.msgIDs.length > 0)
    {
        for(var ni=0; ni<cnm.msgIDs.length; ni++)
        {
            for(var nj=0; nj<cnm.msgs.length; nj++)
            {
                if(cnm.msgs[nj].IDX == cnm.msgIDs[ni])
                {
                    cnm.msgs[nj].SHW = false;
                    if(global.verbose) console.log('This user has seen already ID: ' + cnm.msgIDs[ni]);

                    break;
                }
            }
        }
    }
    else
    {
        if(global.verbose) console.log('This user has not seen any messages yet');
    }
}

//****************************************************************************
// Desc: Rebuilds the messages list
//****************************************************************************
cnm.getMessagesToShow = function()
{
    var nOutCome = 0, nLatestID = 0;
    cnm.msgHtml = '';

    for(var ni=0; ni<cnm.msgs.length; ni++)
    {
        if(cnm.msgs[ni].SHW)
        {
            cnm.msgHtml += '\n<li id="'+ cnm.msgs[ni].IDX +'" class="ui-newsticker-item">'
                        +  '<div class="cnmRow">'
                        +  '<div class="cnmWrap"><a href="/news/" style="cursor: default;"><div class="cnmCaption">News</div></a></div>'
                        +  '<div class="cnmMsgHtml">'
                        +   cnm.msgs[ni].MSG 
                        +  '</div>'
                        +  '</div>'
                        +  '</li>';
            cnm.msgID = cnm.msgs[ni].IDX;
            nOutCome++;
        }
    }

    return nOutCome;
}

//****************************************************************************
// Desc: 
//****************************************************************************
cnm.setMessageAsSeen = function(pnMsgId)
{
    for(var ni=0; ni<cnm.msgs.length; ni++)
    {
        if(cnm.msgs[ni].IDX == pnMsgId)
        {
            cnm.msgs[ni].SHW = false;
            if(global.verbose) console.log('Set message ID: '+cnm.msgs[ni].IDX+' to not show anymore');

            break;
        }
    }
}

//****************************************************************************
// Desc: 
//****************************************************************************
cnm.collectMsgIDs = function()
{
    var arMsgs = [];

    for(var ni=0; ni<cnm.msgs.length; ni++)
    {
        if(!cnm.msgs[ni].SHW) 
        {
            arMsgs.push(cnm.msgs[ni].IDX);
        }
    }
    if(global.verbose) console.log(' --> Active messages already seen by user: ' + JSON.stringify(arMsgs));

    return arMsgs;
}

//****************************************************************************
// Desc: Prepare cookie content
// Sets all msgIDs of the current visible messages array the user has closed.
//****************************************************************************
cnm.pushCookie = function()
{
    var oCookieContent = {}, JSONString = {}, oCookieValues;

    cnm.nVisits = (!isNaN(cnm.nVisits))? ++cnm.nVisits: 1;
    if(cnm.showCNM > 0)
    {
        if(global.verbose) console.log('=> CNM cookie writing enabled!');
        cnm.msgIDs = cnm.collectMsgIDs();
        oCookieContent = {
            'username'  : cnm.sUserName,
            'visits'    : cnm.nVisits,
            'msgids'    : cnm.msgIDs,
            'visitdate' : new Date().toDateString(),
            'revision'  : cnm.revision
        }
        JSONString = JSON.stringify(oCookieContent);
        if(location.host.toLowerCase().indexOf('authoring') == -1)
        {
            oCookieValues = 'micor-cnm=' 
                          +  ut.secEncode(JSONString) 
                          + '; expires='+cnm.cookieExpires+'; path=/; SameSite=Lax; Secure;';
        }
        else
        {
            oCookieValues = 'micor-cnm=' 
                          +  JSONString 
                          + '; expires='+cnm.cookieExpires+'; path=/; SameSite=Lax;';
        }

        ut.setCookie(oCookieValues);
        if(global.verbose) console.log('Set Cookie: \n' + oCookieValues)
    }
    else
    {
        if(global.verbose) console.log('=> Skipping cookie writing because all the message(s) have already been seen by this user');
    }
    cnm._close();
}

//****************************************************************************