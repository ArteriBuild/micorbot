{/* Copyright (c) 2021 AWE ***************************************************
'*  Name:        newsticker.js
'*  Description: Global javascipt snippets.
'*  Email:       wilson.wampers@gmail.com
'*****************************************************************************
'*  Modification History:
'*  -When           -Who            -Bug#           -What
'*  --------------------------------------------------------------------------
'*  -12-Aug-2021    -Wilson Wampers -               -Initial Version
'*****************************************************************************
 '* LM: ww211011.0800 */} 
var news = news || {};
var styleSheet = global.micor2020Path  + 'css/newsticker.css';
                 global.loadCss(styleSheet);
news.interval = null;
news.currentId = -1;

//****************************************************************************
// Desc: original jQuery plugin by Hsin-Hao Tang (MIT license)
// www.jqueryscript.net/animation/Minimalist-jQuery-News-Ticker-Plugin-Newsticker.html
//****************************************************************************
(function($)
{   // class internal var
    var nt = nt || {};

    nt.nLength = 156;
    nt.arFull = new Array();
    nt.idx = 0;
    nt.alt = 'Click to follow this link\n';

    // Constructor
    nt._F = function(pnIdx, psValue)
    {
        this.IDX = pnIdx;
        this.VAL = psValue;
    }
    
    // Adjust message length where needed
    nt.setMaxStringLength = function(poObj, pnLength)
    {
        var originalThis, replaceThis, replaceWith;

        $(poObj).each( function()
        {
            originalThis = replaceThis = nt.lookupValueAtIndex($(this).prop('id'));
            if(replaceThis.length > pnLength + 4)
            {
                replaceWith = replaceThis.substr(0, pnLength) + ' ...'; 
                if($(this).find('span.cnmSpacer a').length > 0)
                {
                    $(this).find('span.cnmSpacer a').text(replaceWith);
                    $(this).find('span.cnmSpacer a').attr('title', nt.alt + originalThis);
                }
                else $(this).find('span.cnmSpacer').text(replaceWith);
            }
        });
    }

    // Look up the item index value c
    nt.lookupValueAtIndex = function(pnIdx)
    {
        for(var ni=0; ni<nt.arFull.length; ni++)
        {
            if(nt.arFull[ni].IDX == pnIdx)
                return nt.arFull[ni].VAL;
        }
    }

    // Register resizing events
    nt.ro = new ResizeObserver(entries => 
    {
        for(let entry of entries) 
        {
            const cr = entry.contentRect;

            if(global.verbose) console.log('-> ui-newsticker width: ' + Math.round(cr.width));
            switch(true)
            {
                case (Math.round(cr.width)<=400):
                {
                    if(nt.nLength != 56)
                    {
                        nt.nLength = 56
                        clearInterval(news.interval);
                        $('div.ui-newsticker').newsticker();
                        if(global.verbose) console.log('-- MaxStringLength set to 56');
                    }

                    break;
                }
                case ((Math.round(cr.width)>400) && (Math.round(cr.width)<900)):
                {
                    if(nt.nLength != 96)
                    {
                        nt.nLength = 96
                        clearInterval(news.interval);
                        $('div.ui-newsticker').newsticker();
                        if(global.verbose) console.log('-- MaxStringLength set to 96');
                    }

                    break;
                }
                case (Math.round(cr.width)>=900):
                {
                    if(nt.nLength !=160)
                    {
                        nt.nLength = 160
                        clearInterval(news.interval);
                        $('div.ui-newsticker').newsticker();
                        if(global.verbose) console.log('-- MaxStringLength set to 160');
                    }

                    break;
                }
            }
        }
    });

    $.fn.newsticker = function(poOptions)
    {// default configuration options || poOptions
        var config = $.extend({},
        {
            height: 50,
            speed: 1750,
            start: 0,
            interval: 6000
        }, poOptions);

        function removeItemAppendClone(pnId, poObj, poFrame)
        {
            var oClone = poObj, oFrame = poFrame;

            $('li.ui-newsticker-item#'+ pnId).remove();
            oFrame.append(oClone);
        }

        function init(poObj)
        {   // set resizing observer
            nt.ro.observe($(poObj)[0]);
            var dFrame = poObj.find('.ui-newsticker-list'),
                dItem = dFrame.find('.ui-newsticker-item'),
                dNext,
                stop = false;

            dItem.eq(0).addClass('current');
            // Store the full message sentences for resizing events
            if(nt.arFull.length == 0)
            {
                dItem.each(function()
                {
                    nt.arFull[nt.arFull.length] = new nt._F(
                        $(this).prop('id'), 
                        $(this).find('span.cnmSpacer').text()
                    );
                });
            }
            nt.setMaxStringLength(dItem, nt.nLength);
            // Declare the looping interval
            news.interval = setInterval( function()
            {
                if(!stop)
                {
                    var dCurrent = dFrame.find('.current');
                
                    $('div.cnmClose').hide();
                    dFrame.animate(
                    {
                        top: '-=' + config.height + 'px'
                    },
                    config.speed,
                    function()
                    {
                        dNext = dFrame.find('.current').next();
                        dCurrent.removeClass('current');
                        dNext.addClass('current');
                        news.currentId = dNext.prop('id');
                        removeItemAppendClone(dCurrent.prop('id'), dCurrent.clone(), dFrame);
                        dFrame.css('top', config.start + 'px');
                        $('div.cnmClose').show();
                    });
                }
            }, config.interval);
            // Stop/re-start on useraction mouseover/mouseout
            poObj.on('mouseover mouseout', function(e)
            {
                if (e.type == 'mouseover')
                {
                    stop = true;
                }
                else
                {// mouseout
                    stop = false;
                }
            });
        }
        // initialize every element
        this.each(function()
        {
            init($(this));
        });

        return this;
    };

})(jQuery);

//****************************************************************************